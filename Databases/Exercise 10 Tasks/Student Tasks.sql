CREATE TABLE STUDENTDETAILS(
    FACULTYNUMBER INT PRIMARY KEY CHECK(FACULTYNUMBER >= 0 AND FACULTYNUMBER <= 99999),
    NAME VARCHAR(100),
    PIN CHAR(10) UNIQUE,
    EMAIL VARCHAR(100) UNIQUE CHECK(EMAIL LIKE '_%@_%._%'),
    BIRTHDATE DATE,
    STARTINGDATE DATE NOT NULL,
    CONSTRAINT CHK_StartingDate CHECK (YEAR(STARTINGDATE) - 18 >= YEAR(BIRTHDATE))
);


CREATE TABLE UNIVERSITYCOURCES(
	ID INT PRIMARY KEY,
	NAME VARCHAR(50)
);


CREATE TABLE STUDENTCOURCES(
	STUDENTID INT FOREIGN KEY REFERENCES STUDENTDETAILS(FACULTYNUMBER),
	COURCEID INT FOREIGN KEY REFERENCES UNIVERSITYCOURCES(ID) ON DELETE CASCADE
);


INSERT INTO STUDENTDETAILS
VALUES 
	(1, 'Peter 1', '1234567891', 'p.gerdzhikov@gmail.com', '2003-06-29', '2023-01-01'),
 	(2, 'Peter 2', '1234567892', 'peter.gerdzhikov@gmail.com', '2003-06-29', '2023-01-01');


INSERT INTO UNIVERSITYCOURCES
VALUES 
	(1, 'Databases'),
	(2, 'OOP');


INSERT INTO STUDENTCOURCES
VALUES 
	(0, 1),
	(1, 1),
	(2, 1);


SELECT 
	UNIVERSITYCOURCES.NAME,
	studentdetails.NAME,
	PIN,
	EMAIL
FROM STUDENTDETAILS
JOIN STUDENTCOURCES ON
	STUDENTDETAILS.FACULTYNUMBER = STUDENTCOURCES.STUDENTID
JOIN UNIVERSITYCOURCES ON
	STUDENTCOURCES.COURCEID = UNIVERSITYCOURCES.ID;


DELETE FROM UNIVERSITYCOURCES	
WHERE ID = 1;

SELECT 
	UNIVERSITYCOURCES.NAME,
	studentdetails.NAME,
	PIN,
	EMAIL
FROM STUDENTDETAILS
JOIN STUDENTCOURCES ON
	STUDENTDETAILS.FACULTYNUMBER = STUDENTCOURCES.STUDENTID
JOIN UNIVERSITYCOURCES ON
	STUDENTCOURCES.COURCEID = UNIVERSITYCOURCES.ID;
